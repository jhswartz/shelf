EHDR_SIZE=64
SHDR_SIZE=64
SYM_SIZE=24

OFFSET=0

SHDRS_OFFSET=${SHDRS_OFFSET:-0}
TEXT_OFFSET=${TEXT_OFFSET:-0}
TEXT_SIZE=${TEXT_SIZE:-0}
DATA_OFFSET=${DATA_OFFSET:-0}
DATA_SIZE=${DATA_SIZE:-0}
BSS_SIZE=${BSS_SIZE:-0}

text()
{
	TEXT_OFFSET=$OFFSET
	file $1
	align 16
	TEXT_SIZE=$(($OFFSET - $TEXT_OFFSET))
}

data()
{
	DATA_OFFSET=$OFFSET
	file $1
	align 16
	DATA_SIZE=$(($OFFSET - $DATA_OFFSET))
}

bss()
{
	BSS_OFFSET=$OFFSET
	BSS_SIZE=$1
}

symtab()
{
	SYMTAB_OFFSET=$OFFSET
	sym 0 0 0 0 0 0
	sym 0 $STT_SECTION $(($STV_DEFAULT << 4 | $STB_LOCAL)) 1 0 0
	sym 0 $STT_SECTION $(($STV_DEFAULT << 4 | $STB_LOCAL)) 2 0 0
	sym 0 $STT_SECTION $(($STV_DEFAULT << 4 | $STB_LOCAL)) 3 0 0
	sym 1 $STT_NOTYPE  $(($STV_DEFAULT << 4 | $STB_LOCAL)) 1 0 0
	SYMTAB_SIZE=$(($OFFSET - $SYMTAB_OFFSET))
}

strtab()
{
	STRTAB_OFFSET=$OFFSET
	string "" "_start"
	STRTAB_SIZE=$(($OFFSET - $STRTAB_OFFSET))
}

shstrtab()
{
	SHSTRTAB_OFFSET=$OFFSET
	string ""
	SHSTRTAB_SHSTRTAB=$(($OFFSET - $SHSTRTAB_OFFSET))
	string ".shstrtab"
	SHSTRTAB_STRTAB=$(($OFFSET - $SHSTRTAB_OFFSET))
	string ".strtab"
	SHSTRTAB_SYMTAB=$(($OFFSET - $SHSTRTAB_OFFSET))
	string ".symtab"
	SHSTRTAB_TEXT=$(($OFFSET - $SHSTRTAB_OFFSET))
	string ".text"
	SHSTRTAB_DATA=$(($OFFSET - $SHSTRTAB_OFFSET))
	string ".data"
	SHSTRTAB_BSS=$(($OFFSET - $SHSTRTAB_OFFSET))
	string ".bss"
	align 16
	SHSTRTAB_SIZE=$(($OFFSET - $SHSTRTAB_OFFSET))
}

shdrs()
{
	SHDRS_OFFSET=$OFFSET

	shdr 0 0 0 0 0 0 0 0 0 0
	shdr $SHSTRTAB_TEXT $SHT_PROGBITS $(($SHF_ALLOC | $SHF_EXEC)) \
	     0 $TEXT_OFFSET $TEXT_SIZE \
	     0 0 1 0
	shdr $SHSTRTAB_DATA $SHT_PROGBITS $(($SHF_WRITE | $SHF_ALLOC)) \
	     0 $DATA_OFFSET $DATA_SIZE \
	     0 0 1 0
	shdr $SHSTRTAB_BSS $SHT_NOBITS $(($SHF_WRITE | $SHF_ALLOC)) \
	     0 $BSS_OFFSET $BSS_SIZE \
	     0 0 1 0
	shdr $SHSTRTAB_SHSTRTAB $SHT_STRTAB 0 \
	     0 $SHSTRTAB_OFFSET $SHSTRTAB_SIZE \
	     0 0 1 0
	shdr $SHSTRTAB_STRTAB $SHT_STRTAB 0 \
	     0 $STRTAB_OFFSET $STRTAB_SIZE \
	     0 0 1 0
	shdr $SHSTRTAB_SYMTAB $SHT_SYMTAB 0 \
	     0 $SYMTAB_OFFSET $SYMTAB_SIZE \
	     5 5 8 $SYM_SIZE
}

plan()
{
	ident $ELFCLASS64 $ELFDATA2LSB $EV_CURRENT $ELFOSABI_NONE
	header $ET_REL $EM_X86_64 $EV_CURRENT $TEXT_OFFSET 0 $SHDRS_OFFSET 0 $EHDR_SIZE 0 0 $SHDR_SIZE 7 4
	text $1
	data $2
	bss  $3
	symtab
	strtab
	shstrtab
	shdrs	
}

main()
{
	if [ $# -ne 3 ]
	then
		printf "usage: reloc.plan TEXT-FILE DATA-FILE BSS-SIZE\n" 1>&2
		exit 2
	fi

	plan "$@"
}

main "$@"
